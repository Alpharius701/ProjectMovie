@addTagHelper *, ProjectMovie

@using ProjectMovie.Models
@model IndexViewModel

@{
    ViewData["Title"] = "Movies";
}

<h1>Movies</h1>

@if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdministratorsRole")).Succeeded)
{
    <p>
        <a asp-action="Create" class="btn btn-info">Create New</a>
    </p>
}

<form asp-controller="Movies" asp-action="Index" method="get">
    <p>
        Genre: <select name="movieGenre" asp-items="Model.FilterViewModel.Genres">
            <option value="">All</option>
        </select>

        Release Year: <select name="movieReleaseDate" asp-items="Model.FilterViewModel.ReleaseDates">
            <option value="">All</option>
        </select>

        Rating: <select name="movieRating" asp-items="Model.FilterViewModel.Ratings">
            <option value="">All</option>
        </select>

        Sort:
        <select asp-controller="Movies" asp-action="Index" name="sortOrder">
            <option value="@SortState.TitleAsc">by title ascending</option>
            <option value="@SortState.TitleDesc">by title descending</option>
            <option value="@SortState.RatingAsc">by rating ascending</option>
            <option value="@SortState.RatingDesc">by rating descending</option>
            <option value="@SortState.ReleaseDateAsc">by release date ascending</option>
            <option value="@SortState.ReleaseDateDesc">by release date descending</option>
            <option value="@SortState.GenreAsc">by genre ascending</option>
            <option value="@SortState.GenreDesc">by genre descending</option>
        </select>

        Find by title: <input type="text" name="title" value="@Model.FilterViewModel.SelectedTitle" />
        <button type="submit" class="btn btn btn-secondary">Search</button>
    </p>
</form>
<form asp-controller="Movies" asp-action="Index">
    <input type="submit" value="Reset filters" class="btn btn-dark" />
</form>
<table class="table">
    <thead>
        <tr>
            <th></th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@(Model.SortViewModel.TitleSort)"
                   asp-route-title="@(Model.FilterViewModel.SelectedTitle)">Title</a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@(Model.SortViewModel.ReleaseDateSort)"
                   asp-route-title="@(Model.FilterViewModel.SelectedTitle)">Release Date</a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@(Model.SortViewModel.GenreSort)"
                   asp-route-title="@(Model.FilterViewModel.SelectedTitle)">Genre</a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@(Model.SortViewModel.RatingSort)"
                   asp-route-title="@(Model.FilterViewModel.SelectedTitle)">Rating</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Movies!)
        {
        <tr>
            <td>
                <img decoding="async" src="@("~/Posters/" + item.PosterFileName)" asp-append-version="true" width="250px" height="375px" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary">Details</a>
                @if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdministratorsRole")).Succeeded)
                {
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">Edit</a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                }
            </td>
        </tr>
        }
    </tbody>
</table>

<page-link page-model="Model.PageViewModel" page-action="Index"
           page-url-title="@Model.FilterViewModel.SelectedTitle!"
           page-url-sortorder="@Model.SortViewModel.Current"></page-link>
