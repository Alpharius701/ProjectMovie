@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (User!.Identity!.IsAuthenticated)
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-controller="Manage" asp-action="Profile">Hello @UserManager.GetUserName(User)!</a>
    </li>
    @if ((await AuthorizationService.AuthorizeAsync(User, "RequireSuperAdminRole")).Succeeded)
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Roles" asp-action="Index">Roles</a>
        </li>
    }
    <li class="nav-item">
        <form asp-controller="Account" asp-action="Logout" method="post">
            <button class="nav-link btn btn-link text-dark border-0" type="submit">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-controller="Account" asp-action="Login">Login</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-controller="Account" asp-action="Register">Register</a>
    </li>
}
</ul>
